<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return mixed
     */
    public function index()
    {
        ${{ modelPluralVariable }} = {{ model }}::paginate(request()->input('per_page',25));
        if( request()->expectsJson() ){
            return response()
                ->json([
                    'results' => ${{ modelPluralVariable }}
                ]);
        }
        return view('{{module}}::index',[
            '{{ modelPluralVariable }}' => ${{ modelPluralVariable }}
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return mixed
     */
    public function create()
    {
        ${{ modelVariable }} = new {{model}};

        return view('{{module}}::form', [
            '{{ modelVariable }}' => ${{ modelVariable }}
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  Request  $request
     * @return JsonResponse
     */
    public function store(Request $request)
    {
        ${{ modelVariable }} = new {{model}}($request->validated());
        ${{ modelVariable }}->save();
        return response()
                    ->json([
                        'error' => false,
                        'message' => '{{model}} has been created successfully',
                        'item' => ${{ modelVariable }}
                    ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return mixed
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        return view('{{module}}::form',[
            '{{modelVariable}}' => ${{ modelVariable }}
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  Request  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return JsonResponse
     */
    public function update(Request $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->fill($request->validated());
        ${{ modelVariable }}->save();
        return response()
            ->json([
                'error' => false,
                'message' => '{{ model }} has been updated successfully.',
                'item' => ${{ modelVariable }}
            ]);
    }

    /**
     * Remove the specified resource from storage.
     * @param Request  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return JsonResponse
     * @throws \Exception
     */
    public function destroy(Request $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return response()
            ->json([
                'error' => false,
                'message' => 'You have deleted the {{ model }} successfully.'
            ]);
    }
}
